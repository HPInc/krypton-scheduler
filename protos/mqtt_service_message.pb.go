// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.8
// source: mqtt_service_message.proto

package protos

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// /////////////////////////////////////////////////////////////////////////////
// ServiceMessage - represents a message sent by the scheduler on behalf of  //
// the device management service to a device.                                //
// /////////////////////////////////////////////////////////////////////////////
// This message originates from a request issued by a device management service
// to a device managed by it. The message contains routing information such as
// the unique ID of the device, the tenant it belongs to and the management
// service that is responsible for managing the device. This routing information
// is used to route the message to the intended device.
// /////////////////////////////////////////////////////////////////////////////
type ServiceMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Version information for the service message.
	Version uint32 `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`
	// Unique identifier of the service requesting the message to be sent to
	// the device.
	ServiceId string `protobuf:"bytes,2,opt,name=service_id,json=serviceId,proto3" json:"service_id,omitempty"`
	// Unique identifier of the device to which the message is being dispatched.
	DeviceId string `protobuf:"bytes,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	// The unique ID assigned by the scheduler to this task.
	TaskId string `protobuf:"bytes,4,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	// The tenant to which the device specified in 'device_id' belongs.
	TenantId string `protobuf:"bytes,5,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	// An identifier assigned to the message sent to the device. This field is not
	// interpreted by the scheduler in any way and is passed on to the device. The
	// device returns this message_id back when responding to the cloud service.
	// This allows 'conversations' between the device management service and the
	// device as a way to keep messages belonging to a logical conversation together.
	MessageId string `protobuf:"bytes,6,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	// The type of message contained within the payload. This is not interpreted
	// by the scheduler and is meant the management service and the target device
	// to figure out how to parse & process the payload.
	MessageType string `protobuf:"bytes,7,opt,name=message_type,json=messageType,proto3" json:"message_type,omitempty"`
	// /////////////////////////// Payload ///////////////////////////////////////
	// The message payload to be delivered to the target device. The payload is
	// opaque to the scheduler and is not interpreted by it in any way.
	Payload []byte `protobuf:"bytes,8,opt,name=payload,proto3" json:"payload,omitempty"`
}

func (x *ServiceMessage) Reset() {
	*x = ServiceMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mqtt_service_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceMessage) ProtoMessage() {}

func (x *ServiceMessage) ProtoReflect() protoreflect.Message {
	mi := &file_mqtt_service_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceMessage.ProtoReflect.Descriptor instead.
func (*ServiceMessage) Descriptor() ([]byte, []int) {
	return file_mqtt_service_message_proto_rawDescGZIP(), []int{0}
}

func (x *ServiceMessage) GetVersion() uint32 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *ServiceMessage) GetServiceId() string {
	if x != nil {
		return x.ServiceId
	}
	return ""
}

func (x *ServiceMessage) GetDeviceId() string {
	if x != nil {
		return x.DeviceId
	}
	return ""
}

func (x *ServiceMessage) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ServiceMessage) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ServiceMessage) GetMessageId() string {
	if x != nil {
		return x.MessageId
	}
	return ""
}

func (x *ServiceMessage) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *ServiceMessage) GetPayload() []byte {
	if x != nil {
		return x.Payload
	}
	return nil
}

var File_mqtt_service_message_proto protoreflect.FileDescriptor

var file_mqtt_service_message_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6d, 0x71, 0x74, 0x74, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x6b, 0x72,
	0x79, 0x70, 0x74, 0x6f, 0x6e, 0x2e, 0x73, 0x63, 0x68, 0x65, 0x64, 0x75, 0x6c, 0x65, 0x72, 0x22,
	0xf8, 0x01, 0x0a, 0x0e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x73, 0x6b,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x73, 0x6b, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x21, 0x0a,
	0x0c, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x61, 0x7a, 0x63, 0x2e, 0x65, 0x78, 0x74, 0x2e, 0x68, 0x70, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x6e, 0x2f, 0x73, 0x63, 0x68, 0x65,
	0x64, 0x75, 0x6c, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mqtt_service_message_proto_rawDescOnce sync.Once
	file_mqtt_service_message_proto_rawDescData = file_mqtt_service_message_proto_rawDesc
)

func file_mqtt_service_message_proto_rawDescGZIP() []byte {
	file_mqtt_service_message_proto_rawDescOnce.Do(func() {
		file_mqtt_service_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_mqtt_service_message_proto_rawDescData)
	})
	return file_mqtt_service_message_proto_rawDescData
}

var file_mqtt_service_message_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_mqtt_service_message_proto_goTypes = []interface{}{
	(*ServiceMessage)(nil), // 0: krypton.scheduler.ServiceMessage
}
var file_mqtt_service_message_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_mqtt_service_message_proto_init() }
func file_mqtt_service_message_proto_init() {
	if File_mqtt_service_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mqtt_service_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mqtt_service_message_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mqtt_service_message_proto_goTypes,
		DependencyIndexes: file_mqtt_service_message_proto_depIdxs,
		MessageInfos:      file_mqtt_service_message_proto_msgTypes,
	}.Build()
	File_mqtt_service_message_proto = out.File
	file_mqtt_service_message_proto_rawDesc = nil
	file_mqtt_service_message_proto_goTypes = nil
	file_mqtt_service_message_proto_depIdxs = nil
}
